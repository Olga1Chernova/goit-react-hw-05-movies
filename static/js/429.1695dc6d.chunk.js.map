{"version":3,"file":"static/js/429.1695dc6d.chunk.js","mappings":"2NACA,EAA0B,oCAA1B,EAAuE,mCAAvE,EAAiH,iC,oCCwCjH,EAlCyB,WAErB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAcR,IAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEEC,EAAAA,EAAAA,IAAaJ,GAFf,OAEXK,EAFW,OAGjBN,EAAWM,EAAKC,SAHC,gDAIRC,EAJQ,KAIRA,SACTC,QAAQC,IAAIF,EAASF,KAAKK,SALT,yDAAH,qDAQlBP,GACD,GAAE,CAACH,IAEmB,IAAnBF,EAAQa,OACR,MAAQ,8BAEZ,IAAMC,EAAWd,EAAQe,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC3B,2BACE,eAAGC,UAAWC,EAAd,qBAAmCH,MACnC,uBAAIC,MAFGf,EADkB,IAO5B,OACE,gBAAKgB,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SAA0BL,KAGlC,C,sLCrCKM,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAGJC,EAAc,mCAAG,sGACHL,EAASM,IAAI,uBADV,uBAClBnB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qDAKdoB,EAAgB,mCAAG,WAAOzB,GAAP,yFACTkB,EAASM,IAAT,iBAAuBxB,IADd,uBACvBK,EADuB,EACvBA,KADuB,kBAEvBA,GAFuB,2CAAH,sDAKhBqB,EAAY,mCAAG,WAAOC,GAAP,yFACLT,EAASM,IAAT,8BAAoCG,EAApC,YADK,uBACnBtB,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKZuB,EAAS,mCAAG,WAAO5B,GAAP,yFACFkB,EAASM,IAAT,iBAAwBxB,EAAxB,aADE,uBAChBK,EADgB,EAChBA,KADgB,kBAEhBA,GAFgB,2CAAH,sDAKTD,EAAY,mCAAE,WAAOJ,GAAP,yFACJkB,EAASM,IAAT,iBAAwBxB,EAAxB,aADI,uBAClBK,EADkB,EAClBA,KADkB,kBAElBA,GAFkB,2CAAF,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieInfoReviews/movie-info-reviews.module.scss?d22d","pages/MovieInfoReviews/MovieInfoReviews.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"movie-info-reviews_wrapper__IWY8y\",\"author\":\"movie-info-reviews_author__DxaUo\",\"list\":\"movie-info-reviews_list__fYpjl\"};","import css from './movie-info-reviews.module.scss';\n\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { movieReviews } from 'shared/services/movies-api';\n\nconst MovieInfoReviews = () => {\n\n    const [reviews, setReviews] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n      const fetchReviews = async () => {\n        try {\n          const data = await movieReviews(id);\n          setReviews(data.results);\n        } catch ({ response }) {\n          console.log(response.data.message);\n        }\n      };\n      fetchReviews();\n    }, [id]);\n\n    if (reviews.length === 0) {\n        return  \"There are no reviews yet!!!\";\n    }\n    const elements = reviews.map(({ id, author, content }) => (\n      <li key={id}>\n        <p className={css.author}>Author: {author}</p>\n        <p>{content}</p>\n      </li>\n    ));\n\n     return (\n       <div className={css.wrapper}>\n         <ul className={css.list}>{elements}</ul>\n       </div>\n     );\n}\n\nexport default MovieInfoReviews;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: 'cf961b1b89f4c4a28558be2b04fdd59a',\n    }\n}) //params for all project\nexport const trendingMovies = async () => {\n    const { data } = await instance.get('/trending/movie/day');\n    return data;\n}\n\nexport const getMovieInfoById = async (id) => {\n  const {data} = await instance.get(`/movie/${id}`);\n  return data;\n}\n\nexport const searchMovies = async (search) => {\n  const {data} = await instance.get(`/search/movie?query=${search}&page=1`);\n  return data;\n}\n\nexport const movieCast = async (id) => {\n  const {data} = await instance.get (`/movie/${id}/credits`);\n  return data;\n}\n\nexport const movieReviews= async (id) => {\n  const {data} = await instance.get (`/movie/${id}/reviews`);\n  return data;\n}"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","movieReviews","data","results","response","console","log","message","length","elements","map","author","content","className","css","instance","axios","baseURL","params","api_key","trendingMovies","get","getMovieInfoById","searchMovies","search","movieCast"],"sourceRoot":""}